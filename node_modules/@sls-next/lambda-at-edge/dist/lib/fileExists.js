"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fileExists = void 0;
const fs_1 = require("fs");
function fileExists(fileName, type) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            if (type === "file") {
                const stats = yield fs_1.promises.stat(fileName);
                return stats.isFile();
            }
            else if (type === "directory") {
                const stats = yield fs_1.promises.stat(fileName);
                return stats.isDirectory();
            }
            else {
                yield fs_1.promises.access(fileName, fs_1.constants.F_OK);
            }
            return true;
        }
        catch (err) {
            if (err.code === "ENOENT") {
                return false;
            }
            throw err;
        }
    });
}
exports.fileExists = fileExists;

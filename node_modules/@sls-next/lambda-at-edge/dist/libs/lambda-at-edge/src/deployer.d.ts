import { Component } from "@serverless/core";
import { OriginRequestDefaultHandlerManifest as BuildManifest, OriginRequestDefaultHandlerManifest, OriginRequestApiHandlerManifest, RoutesManifest } from "@sls-next/lambda-at-edge/types";
import type { ServerlessComponentInputs } from "./types";
export declare type DeploymentResult = {
    appUrl: string;
    bucketName: string;
    distributionId: string;
};
declare class LambdaAtEdgeDeployer extends Component {
    inputs: ServerlessComponentInputs;
    constructor(inputs: ServerlessComponentInputs);
    readDefaultBuildManifest(nextConfigPath: string): Promise<OriginRequestDefaultHandlerManifest>;
    readRoutesManifest(nextConfigPath: string): Promise<RoutesManifest>;
    pathPattern(pattern: string, routesManifest: RoutesManifest): string;
    validatePathPatterns(pathPatterns: string[], buildManifest: BuildManifest, routesManifest: RoutesManifest): void;
    readApiBuildManifest(nextConfigPath: string): Promise<OriginRequestApiHandlerManifest>;
    deploy(inputs?: ServerlessComponentInputs): Promise<DeploymentResult>;
    remove(): Promise<void>;
}
export default LambdaAtEdgeDeployer;
